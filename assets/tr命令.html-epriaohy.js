import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as n,z as s}from"./app-lp0sOEvl.js";const t={},c=s(`<h1 id="tr命令" tabindex="-1"><a class="header-anchor" href="#tr命令"><span>tr命令</span></a></h1><p><code>tr</code>命令用于转换或删除文件中的字符，可以读文件也可以从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tr</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. SET1 <span class="token punctuation">[</span>SET2<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-c, -C, --complement</code>: 使用<code>SET1</code>的补码。</li><li><code>-d, --delete</code>: 删除<code>SET1</code>中的字符，不翻译。</li><li><code>-s, --squeeze-repeats</code>: 用一次出现的字符替换<code>SET1</code>中列出的重复字符的每个输入序列。</li><li><code>-t, --truncate-set1</code>: 首先将<code>SET1</code>截断为<code>SET2</code>的长度。</li><li><code>--help</code>: 输出帮助信息。</li><li><code>--version</code>: 输出版本信息。</li></ul><h2 id="解释序列" tabindex="-1"><a class="header-anchor" href="#解释序列"><span>解释序列</span></a></h2><ul><li><code>\\NNN</code>: 八进制值为<code>NNN</code>的字符(<code>1</code>到<code>3</code>个八进制数字)。</li><li><code>\\\\</code>: 反斜杠。</li><li><code>\\a</code>: 可闻的<code>BEL</code>。</li><li><code>\\b</code>: 退格键。</li><li><code>\\f</code>: 换页。</li><li><code>\\n</code>: 新行。</li><li><code>\\r</code>: 返回。</li><li><code>\\t</code>: 水平制表符。</li><li><code>\\v</code>: 垂直制表符。</li><li><code>CHAR1-CHAR2</code>: 从<code>CHAR1</code>到<code>CHAR2</code>的所有字符按升序排列。</li><li><code>[CHAR*]</code>: 在<code>SET2</code>中，复制<code>CHAR</code>直到<code>SET1</code>的长度。</li><li><code>[CHAR*REPEAT]</code>: 重复<code>CHAR</code>的副本，如果以<code>0</code>开头，则重复八进制。</li><li><code>[:alnum:]</code>: 所有字母和数字。</li><li><code>[:alpha:]</code>: 所有字母。</li><li><code>[:blank:]</code>: 所有水平空白。</li><li><code>[:cntrl:]</code>: 所有控制字符。</li><li><code>[:digit:]</code>: 所有数字。</li><li><code>[:graph:]</code>: 所有可打印字符，不包括空格。</li><li><code>[:lower:]</code>: 所有小写字母。</li><li><code>[:print:]</code>: 所有可打印字符，包括空格。</li><li><code>[:punct:]</code>: 所有标点符号。</li><li><code>[:space:]</code>: 所有水平或垂直空白。</li><li><code>[:upper:]</code>: 所有大写字母。</li><li><code>[:xdigit:]</code>: 所有十六进制数字。</li><li><code>[=CHAR=]</code>: 等同于<code>CHAR</code>的所有字符。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p><code>file.txt</code>文件内容如下。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Hello World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件中的字母全部转换为大写。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> file.txt <span class="token operator">|</span> <span class="token function">tr</span> <span class="token punctuation">[</span>a-z<span class="token punctuation">]</span> <span class="token punctuation">[</span>A-Z<span class="token punctuation">]</span>
<span class="token comment"># HELLO WORLD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>同样可以使用<code>[:lower]</code>与<code>[:upper]</code>参数来实现。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> file.txt <span class="token operator">|</span> <span class="token function">tr</span> <span class="token punctuation">[</span>:lower:<span class="token punctuation">]</span> <span class="token punctuation">[</span>:upper:<span class="token punctuation">]</span>
<span class="token comment"># HELLO WORLD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将水平空白符转换为<code>\\t</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> file.txt <span class="token operator">|</span> <span class="token function">tr</span> <span class="token punctuation">[</span>:space:<span class="token punctuation">]</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>&quot;</span>
<span class="token comment"># Hello   World   </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除所有<code>o</code>字符。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> file.txt <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;o&quot;</span>
<span class="token comment"># Hell Wrld</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除所有数字。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;My ID is 73535&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>:digit:<span class="token punctuation">]</span>
<span class="token comment"># My ID is</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>取出字符串中的数字。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>echo &quot;My ID is 73535&quot; | tr -cd [:digit:]
# 73535
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://www.runoob.com/linux/linux-comm-tr.html
https://www.tutorialspoint.com/unix_commands/tr.htm
https://www.geeksforgeeks.org/tr-command-in-unix-linux-with-examples/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),i=[c];function l(o,d){return a(),n("div",null,i)}const u=e(t,[["render",l],["__file","tr命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/tr%E5%91%BD%E4%BB%A4.html","title":"tr命令","lang":"zh-CN","frontmatter":{"description":"tr命令 tr命令用于转换或删除文件中的字符，可以读文件也可以从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。 语法 参数 -c, -C, --complement: 使用SET1的补码。 -d, --delete: 删除SET1中的字符，不翻译。 -s, --squeeze-repeats: 用一次出现的字符替换SET1中列出的重...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/tr%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"tr命令"}],["meta",{"property":"og:description","content":"tr命令 tr命令用于转换或删除文件中的字符，可以读文件也可以从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。 语法 参数 -c, -C, --complement: 使用SET1的补码。 -d, --delete: 删除SET1中的字符，不翻译。 -s, --squeeze-repeats: 用一次出现的字符替换SET1中列出的重..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tr命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"解释序列","slug":"解释序列","link":"#解释序列","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"MacOS/Terminal/tr命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,m as data};
