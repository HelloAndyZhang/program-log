import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as n,z as t}from"./app-lp0sOEvl.js";const s={},c=t(`<h1 id="tmpwatch命令" tabindex="-1"><a class="header-anchor" href="#tmpwatch命令"><span>tmpwatch命令</span></a></h1><p><code>tmpwatch</code>递归删除给定时间内未访问的文件，通常用于清理用于临时存放空间的目录，并可以设置文件超期时间，默认单位以小时计算。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch <span class="token punctuation">[</span>-u <span class="token operator">|</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span> -c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-MUadfqstvx<span class="token punctuation">]</span> <span class="token punctuation">[</span>--verbose<span class="token punctuation">]</span> <span class="token punctuation">[</span>--force<span class="token punctuation">]</span> <span class="token punctuation">[</span>--all<span class="token punctuation">]</span> <span class="token punctuation">[</span>--nodirs<span class="token punctuation">]</span> <span class="token punctuation">[</span>--nosymlinks<span class="token punctuation">]</span> <span class="token punctuation">[</span>--test<span class="token punctuation">]</span> <span class="token punctuation">[</span>--fuser<span class="token punctuation">]</span> <span class="token punctuation">[</span>--quiet<span class="token punctuation">]</span> <span class="token punctuation">[</span>--atime <span class="token operator">|</span> <span class="token parameter variable">--mtime</span> <span class="token operator">|</span> --ctime<span class="token punctuation">]</span> <span class="token punctuation">[</span>--dirmtime<span class="token punctuation">]</span> <span class="token punctuation">[</span>--exclude path <span class="token punctuation">]</span> <span class="token punctuation">[</span>--exclude-user user <span class="token punctuation">]</span> <span class="token function">time</span> <span class="token function">dirs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-a, --all</code>: 删除所有文件类型，而不仅仅是常规文件，符号链接和目录。</li><li><code>-c, --ctime</code>: 根据文件的<code>ctime</code>即<code>inode</code>更改时间，而不是<code>atime</code>来决定删除文件，对于目录根据<code>mtime</code>做出是否删除的决定。</li><li><code>-d, --nodirs</code>: 即使目录为空，也不要尝试删除它们。</li><li><code>-f, --force</code>: 即使<code>root</code>没有写访问权限，也删除文件类似于<code>rm -f</code>。</li><li><code>-l, --nosymlinks</code>: 不要尝试删除符号链接。</li><li><code>-m, --mtime</code>: 根据文件的<code>mtime</code>即修改时间而不是<code>atime</code>来决定删除文件。</li><li><code>-M, --dirmtime</code>: 根据目录的<code>mtime</code>即修改时间而不是<code>atime</code>来决定删除目录，完全忽略目录时间。</li><li><code>-q, --quiet</code>: 仅报告致命错误。</li><li><code>-s, --fuser</code>: 尝试使用<code>fuser</code>命令来查看文件是否已打开，然后再将其删除，默认情况下未启用，在某些情况下确实有帮助。</li><li><code>-t, --test</code>: 不要删除文件，但要执行删除它们的动作，这意味着<code>-v</code>。</li><li><code>-u, --atime</code>: 根据文件的访问时间来决定是否删除文件，这是默认值，请注意定期的<code>updatedb</code>文件系统扫描会保留最近的目录时间。</li><li><code>-U, --exclude-user=user</code>: 不要删除用户拥有的文件，该文件可以是用户名或数字用户<code>ID</code>。</li><li><code>-v, --verbose</code>: 打印详细显示，有两种详细级别可用。</li><li><code>-x, --exclude=path</code>: 跳过路径，如果<code>path</code>是目录，则包含在其中的所有文件也会被跳过，如果路径不存在，则它必须是不包含符号链接的绝对路径。</li><li><code>-X, --exclude-pattern=pattern</code>: 跳过路径匹配模式，如果目录与<code>pattern</code>匹配，其中的所有文件也将被跳过，模式必须匹配不包含符号链接的绝对路径。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>要从<code>/var/log/</code>日志目录中删除<code>30d</code>以上未访问的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch 30d /var/log/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>列出<code>/tmp/</code>缓存目录中至少<code>30</code>小时未修改的所有文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch –mtime <span class="token number">30</span> –nodirs /tmp/ –test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除<code>/tmp/</code>缓存目录中至少<code>30</code>个小时未访问的所有文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch <span class="token parameter variable">-am</span> <span class="token number">30</span> –nodirs /tmp/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://linux.die.net/man/8/tmpwatch
https://www.runoob.com/linux/linux-comm-tmpwatch.html
https://www.interserver.net/tips/kb/tmpwatch-command-linux/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="tmpwatch命令-1" tabindex="-1"><a class="header-anchor" href="#tmpwatch命令-1"><span>tmpwatch命令</span></a></h1><p><code>tmpwatch</code>递归删除给定时间内未访问的文件，通常用于清理用于临时存放空间的目录，并可以设置文件超期时间，默认单位以小时计算。</p><h2 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch <span class="token punctuation">[</span>-u <span class="token operator">|</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span> -c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-MUadfqstvx<span class="token punctuation">]</span> <span class="token punctuation">[</span>--verbose<span class="token punctuation">]</span> <span class="token punctuation">[</span>--force<span class="token punctuation">]</span> <span class="token punctuation">[</span>--all<span class="token punctuation">]</span> <span class="token punctuation">[</span>--nodirs<span class="token punctuation">]</span> <span class="token punctuation">[</span>--nosymlinks<span class="token punctuation">]</span> <span class="token punctuation">[</span>--test<span class="token punctuation">]</span> <span class="token punctuation">[</span>--fuser<span class="token punctuation">]</span> <span class="token punctuation">[</span>--quiet<span class="token punctuation">]</span> <span class="token punctuation">[</span>--atime <span class="token operator">|</span> <span class="token parameter variable">--mtime</span> <span class="token operator">|</span> --ctime<span class="token punctuation">]</span> <span class="token punctuation">[</span>--dirmtime<span class="token punctuation">]</span> <span class="token punctuation">[</span>--exclude path <span class="token punctuation">]</span> <span class="token punctuation">[</span>--exclude-user user <span class="token punctuation">]</span> <span class="token function">time</span> <span class="token function">dirs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数</span></a></h2><ul><li><code>-a, --all</code>: 删除所有文件类型，而不仅仅是常规文件，符号链接和目录。</li><li><code>-c, --ctime</code>: 根据文件的<code>ctime</code>即<code>inode</code>更改时间，而不是<code>atime</code>来决定删除文件，对于目录根据<code>mtime</code>做出是否删除的决定。</li><li><code>-d, --nodirs</code>: 即使目录为空，也不要尝试删除它们。</li><li><code>-f, --force</code>: 即使<code>root</code>没有写访问权限，也删除文件类似于<code>rm -f</code>。</li><li><code>-l, --nosymlinks</code>: 不要尝试删除符号链接。</li><li><code>-m, --mtime</code>: 根据文件的<code>mtime</code>即修改时间而不是<code>atime</code>来决定删除文件。</li><li><code>-M, --dirmtime</code>: 根据目录的<code>mtime</code>即修改时间而不是<code>atime</code>来决定删除目录，完全忽略目录时间。</li><li><code>-q, --quiet</code>: 仅报告致命错误。</li><li><code>-s, --fuser</code>: 尝试使用<code>fuser</code>命令来查看文件是否已打开，然后再将其删除，默认情况下未启用，在某些情况下确实有帮助。</li><li><code>-t, --test</code>: 不要删除文件，但要执行删除它们的动作，这意味着<code>-v</code>。</li><li><code>-u, --atime</code>: 根据文件的访问时间来决定是否删除文件，这是默认值，请注意定期的<code>updatedb</code>文件系统扫描会保留最近的目录时间。</li><li><code>-U, --exclude-user=user</code>: 不要删除用户拥有的文件，该文件可以是用户名或数字用户<code>ID</code>。</li><li><code>-v, --verbose</code>: 打印详细显示，有两种详细级别可用。</li><li><code>-x, --exclude=path</code>: 跳过路径，如果<code>path</code>是目录，则包含在其中的所有文件也会被跳过，如果路径不存在，则它必须是不包含符号链接的绝对路径。</li><li><code>-X, --exclude-pattern=pattern</code>: 跳过路径匹配模式，如果目录与<code>pattern</code>匹配，其中的所有文件也将被跳过，模式必须匹配不包含符号链接的绝对路径。</li></ul><h2 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h2><p>要从<code>/var/log/</code>日志目录中删除<code>30d</code>以上未访问的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch 30d /var/log/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>列出<code>/tmp/</code>缓存目录中至少<code>30</code>小时未修改的所有文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch –mtime <span class="token number">30</span> –nodirs /tmp/ –test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除<code>/tmp/</code>缓存目录中至少<code>30</code>个小时未访问的所有文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tmpwatch <span class="token parameter variable">-am</span> <span class="token number">30</span> –nodirs /tmp/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考-1" tabindex="-1"><a class="header-anchor" href="#参考-1"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://linux.die.net/man/8/tmpwatch
https://www.runoob.com/linux/linux-comm-tmpwatch.html
https://www.interserver.net/tips/kb/tmpwatch-command-linux/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),o=[c];function i(d,l){return a(),n("div",null,o)}const u=e(s,[["render",i],["__file","tmpwatch命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/tmpwatch%E5%91%BD%E4%BB%A4.html","title":"tmpwatch命令","lang":"zh-CN","frontmatter":{"description":"tmpwatch命令 tmpwatch递归删除给定时间内未访问的文件，通常用于清理用于临时存放空间的目录，并可以设置文件超期时间，默认单位以小时计算。 语法 参数 -a, --all: 删除所有文件类型，而不仅仅是常规文件，符号链接和目录。 -c, --ctime: 根据文件的ctime即inode更改时间，而不是atime来决定删除文件，对于目录根据...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/tmpwatch%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"tmpwatch命令"}],["meta",{"property":"og:description","content":"tmpwatch命令 tmpwatch递归删除给定时间内未访问的文件，通常用于清理用于临时存放空间的目录，并可以设置文件超期时间，默认单位以小时计算。 语法 参数 -a, --all: 删除所有文件类型，而不仅仅是常规文件，符号链接和目录。 -c, --ctime: 根据文件的ctime即inode更改时间，而不是atime来决定删除文件，对于目录根据..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tmpwatch命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]},{"level":2,"title":"语法","slug":"语法-1","link":"#语法-1","children":[]},{"level":2,"title":"参数","slug":"参数-1","link":"#参数-1","children":[]},{"level":2,"title":"示例","slug":"示例-1","link":"#示例-1","children":[]},{"level":2,"title":"参考","slug":"参考-1","link":"#参考-1","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":4.19,"words":1256},"filePathRelative":"MacOS/Terminal/tmpwatch命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,m as data};
