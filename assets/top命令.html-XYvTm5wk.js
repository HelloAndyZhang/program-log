import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as o,j as d,z as c}from"./app-lp0sOEvl.js";const i={},a=c(`<h1 id="top命令" tabindex="-1"><a class="header-anchor" href="#top命令"><span>top命令</span></a></h1><p><code>top</code>命令提供运行系统的动态实时视图，其可以显示系统摘要信息，以及当前由内核管理的进程或线程的列表，显示的系统摘要信息的类型以及为任务显示的信息的类型、顺序和大小都是用户可配置的。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-hv</span> <span class="token operator">|</span> <span class="token parameter variable">-bcHisS</span> <span class="token parameter variable">-d</span> delay <span class="token parameter variable">-n</span> limit -u<span class="token operator">|</span>U user <span class="token operator">|</span> <span class="token parameter variable">-p</span> pid <span class="token parameter variable">-w</span> <span class="token punctuation">[</span>cols<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-h</code>: 输出帮助信息。</li><li><code>-v</code>: 输出版本信息。</li><li><code>-b</code>: 以批处理模式启动<code>top</code>，这对于从<code>top</code>向其他程序或文件发送输出很有用，在这种模式下，<code>top</code>将不接受输入并运行，直到您使用&#39;<code>-n</code>&#39;命令行选项设置了迭代次数限制或终止为止。</li><li><code>-c</code>: 以倒转最后一个记忆中的<code>c</code>状态开始，因此如果<code>top</code>显示命令行，那么现在该字段将显示程序名，反之亦然。</li><li><code>-d interval</code>: 指定屏幕更新之间的延迟，并覆盖个人配置文件中的相应值或启动默认值，启动后也可以使用<code>d</code>或<code>s</code>交互命令更改。</li><li><code>-H</code>: 指示<code>top</code>显示各个线程，如果没有此命令行选项，则显示每个进程中所有线程的总和，启动后可以使用<code>H</code>交互命令更改。</li><li><code>-i</code>: 空闲进程切换，以倒转最后一个记忆中的<code>i</code>状态开始，关闭此切换时，将不显示自上次更新以来未使用任何<code>CPU</code>的任务。</li><li><code>-n limit</code>: 指定<code>top</code>在结束前应产生的最大迭代次数或帧数。</li><li><code>-o</code>: 指定将对任务进行排序的字段的名称，与配置文件中反映的内容无关，您可以在字段名前面加上<code>+</code>或<code>-</code>，以覆盖排序方向，前导<code>+</code>将强制从高到低排序，而<code>-</code>将确保从低到高排序，此选项主要用于支持自动脚本化批处理模式操作。</li><li><code>-O</code>: 此选项作为上述<code>-o</code>选项的帮助形式，它将使<code>top</code>在单独的一行中打印每个可用的字段名，然后退出。</li><li><code>-p pid</code>: 仅监视具有指定进程<code>ID</code>的进程，此选项最多可以给予<code>20</code>次，也可以提供一个逗号分隔的列表，其中最多包含<code>20</code>个<code>PID</code>，允许两种方法混合使用，<code>pid</code>值为零将被视为<code>top</code>程序运行时的进程<code>id</code>，这只是一个命令行选项，如果您希望返回正常操作，则无需退出并重新启动<code>top</code>，只需发出以下任何交互式命令<code>=</code>、<code>u</code>或<code>U</code>，对于<code>p</code>、<code>u</code>和<code>U</code>命令行选项是互斥的。</li><li><code>-s</code>: 安全模式操作，以强制的安全模式启动<code>top</code>，即使对于<code>root</code>也是如此，通过系统配置文件可以更好地控制此模式。</li><li><code>-S</code>: 累计时间切换，以倒转最后一个记忆中的<code>S</code>状态开始，当累计时间模式打开时，每个进程都会列出它及其子进程使用的<code>cpu</code>时间。</li><li><code>-u user-id-or-name, -U user-id-or-name</code>: 仅显示用户<code>id</code>或用户名与给定进程匹配的进程，<code>-u</code>选项匹配有效用户，而<code>-U</code>选项匹配任何用户<code>real</code>、<code>effective</code>、<code>saved</code>或<code>filesystem</code>，在感叹号<code>!</code>前面加上前缀用户<code>id</code>或名称指示<code>top</code>仅显示用户与提供的进程不匹配的进程，<code>p</code>、<code>u</code>和<code>U</code>命令行选项是互斥的。</li><li><code>-w number</code>: 在批处理模式下，如果没有参数，<code>top</code>将使用<code>COLUMNS=</code>和<code>LINES=</code>环境变量(如果设置)格式化输出，否则，宽度将固定在最大<code>512</code>列，通过一个参数，可以减少或增加输出宽度(最多<code>512</code>行)，但行数被认为是无限的，在正常显示模式下，如果没有参数，<code>top</code>将尝试使用<code>COLUMNS=</code>和<code>LINES=</code>环境变量(如果设置)格式化输出，对于参数，输出宽度只能减小，不能增大，无论是使用环境变量还是带有<code>-w</code>的参数，当不处于批处理模式时，都不能超过实际的终端维度，注意如果不使用此命令行选项，输出宽度始终基于调用<code>top</code>的终端，无论是否处于批处理模式。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>以下启动默认值操作假定没有相关配置文件，即没有用户自定义，此外带星号<code>*</code>的项目可以通过命令行覆盖。</p><ul><li><code>^Z</code>: 挂起。</li><li><code>fg</code>: 恢复挂起的命令。</li><li><code>&lt;Left&gt;</code>: 强制屏幕重绘。</li><li><code>A</code>: 交叉显示，默认全屏显示。</li><li><code>d</code>: <code>*</code>延迟时间，默认为<code>3s</code>。</li><li><code>H</code>: <code>*</code>线程模式，默认关闭。</li><li><code>I</code>: <code>Irix</code>模式，默认开启。</li><li><code>p</code>: <code>*</code>监控<code>PID</code>，默认显示所有进程。</li><li><code>1</code>: 查看服务器的<code>cpu</code>逻辑数。</li><li><code>M</code>: 根据驻留内存大小进行排序。</li><li><code>P</code>: 根据<code>CPU</code>使用百分比大小进行排序。</li><li><code>T</code>: 根据时间<code>/</code>累计时间进行排序。</li><li><code>c</code>: 切换显示命令名称和完整命令行。</li><li><code>t</code>: 切换显示进程和<code>CPU</code>信息。</li><li><code>m</code>: 切换显示内存信息。</li><li><code>l</code>: 切换显示平均负载和启动时间信息 。</li><li><code>o</code>: 改变显示项目的顺序。</li><li><code>f</code>: 从当前显示中添加或删除列项目。</li><li><code>S</code>: 切换到累计模式。</li><li><code>s</code>: 改变两次刷新之间的延迟时间，系统将提示用户输入新的时间，单位为<code>s</code>，如果有小数，就换算成<code>ms</code>。</li><li><code>q</code>: 退出<code>top</code>命令。</li><li><code>i</code>: 忽略闲置和僵尸进程。</li><li><code>k</code>: 终止一个进程。</li></ul><h2 id="相关信息" tabindex="-1"><a class="header-anchor" href="#相关信息"><span>相关信息</span></a></h2><h3 id="概览" tabindex="-1"><a class="header-anchor" href="#概览"><span>概览</span></a></h3><ul><li><code>total</code>: 进程总数。</li><li><code>running</code>: 正在运行的进程数。</li><li><code>sleeping</code>: 睡眠的进程数。</li><li><code>stopped</code>: 停止的进程数。</li><li><code>zombie</code>: 僵尸进程数。</li></ul><h3 id="cpu信息" tabindex="-1"><a class="header-anchor" href="#cpu信息"><span>CPU信息</span></a></h3><ul><li><code>us</code>: 用户空间占用<code>CPU</code>百分比。</li><li><code>sy</code>: 内核空间占用<code>CPU</code>百分比。</li><li><code>ni</code>: 用户进程空间内改变过优先级的进程占用<code>CPU</code>百分比。</li><li><code>id</code>: 空闲<code>CPU</code>百分比。</li><li><code>wa</code>: 等待输入输出的<code>CPU</code>时间百分比。</li><li><code>hi</code>: 硬件<code>CPU</code>中断占用百分比。</li><li><code>si</code>: 软中断占用百分比。</li><li><code>st:</code>虚拟机占用百分比。</li></ul><h3 id="列字段" tabindex="-1"><a class="header-anchor" href="#列字段"><span>列字段</span></a></h3><p>可以使用<code>f</code>交互命令自定义列的位置及其是否可显示。</p><ul><li><code>%CPU</code>: <code>CPU Usage</code>，<code>CPU</code>使用率，任务自上次屏幕更新以来占用的<code>CPU</code>时间份额，表示为总<code>CPU</code>时间的百分比，在真正的<code>SMP</code>环境中，如果一个进程是多线程的，并且<code>top</code>不是以线程模式运行的，那么可能会报告大于<code>100%</code>的数量，您可以使用<code>H</code>交互命令切换线程模式，同样对于多处理器环境，如果<code>Irixmode</code>处于关闭状态，<code>top</code>将在<code>Solarismode</code>下运行，其中任务的<code>cpu</code>使用量将除以<code>cpu</code>总数，您可以使用<code>I</code>交互命令切换<code>Irix/Solaris</code>模式。</li><li><code>%MEM</code>: <code>Memory Usage (RES)</code>，内存使用情况，任务当前使用的可用物理内存共享。</li><li><code>CGROUPS</code>: <code>Control Groups</code>，控制组，流程所属的控制组的名称，如果不适用于该流程，则为<code>-</code>，控制组用于在安装定义的进程组之间分配资源(<code>cpu</code>、内存、网络带宽等)，它们支持对这些资源的分配、拒绝、优先排序、管理和监视进行细粒度控制，一个系统上可以同时存在许多不同的<code>cgroup</code>层次结构，并且每个层次结构都连接到一个或多个子系统，子系统表示单个资源，注意<code>: CGROUPS</code>字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多<code>512</code>个字符)，即便如此，这种可变宽度的字段仍然会受到截断。</li><li><code>CODE</code>: <code>Code Size (KiB)</code>，代码大小<code>KiB</code>，用于可执行代码的物理内存量，也称为文本驻留集大小或<code>TRS</code>。</li><li><code>COMMAND</code>: <code>Command Name or Command Line</code>，命令名或命令行，显示用于启动任务的命令行或关联程序的名称，您可以使用<code>c</code>在命令行和名称之间切换，这既是一个命令行选项，也是一个交互式命令，当您选择显示命令行时，没有命令行的进程(如内核线程)将只显示程序名，此字段也可能受视图显示模式的影响，注意<code>COMMAND</code>字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多<code>512</code>个字符)，即便如此，这种可变宽度的字段仍然会受到截断，当显示命令行时，此字段尤其如此。</li><li><code>DATA</code>: <code>Data + Stack Size (KiB)</code>，用于可执行代码以外的物理内存量，也称为数据驻留集大小或<code>DRS</code>。</li><li><code>ENVIRON</code>: <code>Environment variables</code>，显示各个进程看到的所有环境变量(如果有)，这些变量将以原始的本机顺序显示，而不是您习惯于用非限定的<code>set</code>看到的排序顺序，注意<code>ENVIRON</code>字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多<code>512</code>个字符)，即便如此，这种可变宽度的字段仍然会受到截断。</li><li><code>Flags</code>: <code>Task Flags</code>，此列表示任务的当前调度标志，这些标志以十六进制表示，并且不包含零，这些标志正式记录在<code>&lt;linux/sched.h&gt;</code>中。</li><li><code>GID</code>: <code>Group Id</code>，有效组<code>ID</code>。</li><li><code>GROUP</code>: <code>Group Name</code>，有效组名。</li><li><code>NI</code>: <code>Nice Value</code>，负的<code>nice</code>值意味着更高的优先级，而正的<code>nice</code>值意味着更低的优先级，此字段中的零表示在确定任务的调度能力时不会调整优先级。</li><li><code>P</code>: <code>Last used CPU (SMP)</code>，表示最后使用的处理器的数字，在真正的<code>SMP</code>环境中，这可能会频繁更改，因为内核有意使用弱关联，另外，运行<code>top</code>的行为可能会破坏这种弱关联，并导致更多进程更频繁地更改<code>cpu</code>(因为对<code>cpu</code>时间的额外需求)。</li><li><code>PGRP</code>: <code>Process Group Id</code>，每个进程都是唯一进程组的成员，该进程组用于分配信号，并由终端对其输入和输出请求进行仲裁，创建(<code>fork</code>)流程时，它将成为其父流程组的成员，按照约定，该值等于流程组的第一个成员(称为流程组长)的流程<code>ID</code>。</li><li><code>PID</code>: <code>Process Id</code>，任务的唯一进程<code>ID</code>，它定期包装，但从不在零重新启动，在内核中，它是一个由<code>task_struct</code>定义的可调度实体，此值还可用作<code>: </code>进程组<code>ID</code>、会话负责人的会话<code>ID</code>、线程组负责人的线程组<code>ID</code>、进程组负责人的<code>TTY</code>进程组<code>ID</code>。</li><li><code>PPID</code>: <code>Parent Process Id</code>，任务父进程的进程<code>ID</code>(<code>pid</code>)。</li><li><code>PR</code>: <code>Priority</code>，任务的调度优先级，如果在该字段中看到<code>rt</code>，则表示任务正在实时调度优先级下运行，在<code>linux</code>下，实时优先级有些误导，因为传统上操作本身是不可抢占的，虽然<code>2.6</code>内核可以被大部分抢占，但并不总是这样。</li><li><code>RES</code>: <code>Resident Memory Size (KiB)</code>，任务使用的非交换物理内存。</li><li><code>RUID</code>: <code>Real User Id</code>，真实用户<code>ID</code>。</li><li><code>RUSER</code>: <code>Real User Name</code>，真实的用户名。</li><li><code>S</code>: <code>Process Status</code>，任务的状态，可以是: <code>D</code>不间断睡眠、<code>R</code>运行、<code>S</code>睡眠、<code>T</code>跟踪或停止、<code>Z</code>僵尸，显示为正在运行的任务应该更恰当地被认为是准备运行的——它们的任务结构只在<code>Linux</code>运行队列中表示，即使没有真正的<code>SMP</code>机器，根据<code>top</code>的延迟间隔和<code>nice</code>值，也可能会看到许多处于这种状态的任务。</li><li><code>SHR</code>: <code>Shared Memory Size (KiB)</code>，一个任务可用的共享内存量，通常不是所有的内存都是驻留的，它只是反映了可能与其他进程共享的内存。</li><li><code>SID</code>: <code>Session Id</code>，会话是进程组的集合，通常由登录<code>shell</code>建立，新<code>fork</code>的进程加入其创建者的会话，按照惯例，这个值等于会话的第一个成员的进程<code>ID</code>，称为会话头，通常是登录<code>shell</code>。</li><li><code>SUID</code>: <code>Saved User Id</code>，保存的用户<code>ID</code>。</li><li><code>SUPGIDS</code>: <code>Supplementary Group IDs</code>，建立的或从任务父级继承的任何补充组的<code>ID</code>，它们以逗号分隔的列表显示，注意<code>SUPGIDS</code>字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多<code>512</code>个字符)，即便如此，这种可变宽度的字段仍然会受到截断。</li><li><code>SUPGRPS</code>: <code>Supplementary Group Names</code>，登录时建立的或从任务父级继承的任何补充组的名称，它们以逗号分隔的列表显示，注意<code>: SUPGRPS</code>字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多<code>512</code>个字符)，即便如此，这种可变宽度的字段仍然会受到截断。</li><li><code>SUSER</code>: <code>Saved User Name</code>，保存的用户名。</li><li><code>SWAP</code>: <code>Swapped Size (KiB)</code>，任务地址空间的非驻留部分。</li><li><code>TGID</code>: <code>Thread Group Id</code>，任务所属的线程组的<code>ID</code>，它是线程组负责人的<code>PID</code>，在内核术语中，它表示那些共享<code>mm_struct</code>的任务。</li><li><code>TIME</code>: <code>CPU Time</code>，任务自启动以来使用的总<code>CPU</code>时间，当累积模式打开时，每个进程都会列出它及其子进程使用的<code>cpu</code>时间，使用<code>S</code>切换累积模式，这既是命令行选项，也是交互式命令，有关此模式的其他信息，请参阅<code>S</code>交互命令。</li><li><code>TIME+</code>: <code>CPU Time, hundredths</code>，与<code>Time</code>相同，但通过百分之一秒反映出更多的粒度。</li><li><code>TPGID</code>: <code>Tty Process Group Id</code>，连接的<code>tty</code>的前台进程的进程组<code>ID</code>，如果进程未连接到终端，则为<code>-1</code>，按照惯例，此值等于流程组长的流程<code>ID</code>。</li><li><code>TTY</code>: <code>Controlling Tty</code>，控制终端的名称，这通常是启动进程的设备(串口、<code>pty</code>等)，并用于输入或输出，但是，任务不需要与终端相关联，在这种情况下，您将看到<code>?</code>显示。</li><li><code>UID</code>: <code>User Id</code>，任务所有者的有效用户<code>ID</code>。</li><li><code>USED</code>: <code>Memory in Use (KiB)</code>，此字段表示任务已使用的非交换物理内存(<code>RES</code>)加上其地址空间(<code>SWAP</code>)的非驻留部分。</li><li><code>USER</code>: <code>User Name</code>，任务所有者的有效用户名。</li><li><code>VIRT</code>: <code>Virtual Memory Size (KiB)</code>，任务使用的虚拟内存总量。它包括所有代码、数据和共享库，以及已调出的页面和已映射但未使用的页面。</li><li><code>WCHAN</code>: <code>Sleeping in Function</code>，取决于内核链接映射的可用性系统地图)，此字段将显示任务当前休眠的内核函数的名称或地址，正在运行的任务将在此列中显示一个破折号<code>-</code>，通过显示此字段，<code>top</code>自己的工作集可以增加<code>700Kb</code>以上，具体取决于内核版本，如果发生这种情况，减少开销的唯一方法就是停止并重新启动<code>top</code>。</li><li><code>nDRT</code>: <code>Dirty Pages Count</code>，自上次写入辅助存储器以来已修改的页数，<code>dirty pages</code>必须先写入辅助存储器，然后才能将相应的物理内存位置用于其他虚拟页。</li><li><code>nMaj</code>: <code>Major Page Fault Count</code>，任务发生的主要页错误数，当进程试图读取或写入其地址空间中当前不存在的虚拟页时，会发生页错误，一个主要的页面错误是当辅助存储访问涉及到使该页面可用时。</li><li><code>nMin</code>: <code>Minor Page Fault count</code>，任务发生的次要页面错误数，当进程试图读取或写入其地址空间中当前不存在的虚拟页时，会发生页错误，在使该页可用时，较小的页错误不涉及辅助存储器访问。</li><li><code>nTH</code>: <code>Number of Threads</code>，与进程关联的线程数。</li><li><code>nsIPC</code>: <code>IPC namespace</code>，用于隔离进程间通信(<code>IPC</code>)资源(如<code>SystemVIPC</code>对象和<code>POSIX</code>消息队列)的命名空间的<code>Inode</code>。</li><li><code>nsMNT</code>: <code>MNT namespace</code>，命名空间的<code>Inode</code>，用于隔离文件系统装入点，从而提供文件系统层次结构的不同视图。</li><li><code>nsNET</code>: <code>NET namespace</code>，命名空间的<code>Inode</code>，用于隔离网络设备、<code>IP</code>地址、<code>IP</code>路由、端口号等资源。</li><li><code>nsPID</code>: <code>PID namespace</code>，命名空间的<code>Inode</code>，用于隔离进程<code>ID</code>号，这意味着它们不必保持唯一，因此，每个这样的名称空间都可以有自己的<code>init</code>(<code>PID#1</code>)来管理各种初始化任务并获取孤立的子进程。</li><li><code>nsUSER</code>: <code>USER namespace</code>，用于隔离用户和组<code>ID</code>号的命名空间的<code>Inode</code>，因此，一个进程可以在用户名称空间外有一个普通的未授权用户<code>ID</code>，而在该名称空间内有一个具有完全根权限的用户<code>ID0</code>。</li><li><code>nsUTS</code>: <code>UTS namespace</code>，用于隔离主机名和<code>NIS</code>域名的命名空间的<code>Inode, UTS</code>的意思是<code>UNIX</code>分时系统。</li><li><code>vMj</code>: <code>Major Page Fault Count Delta</code>，自上次更新以来发生的主要页错误数。</li><li><code>vMn</code>: <code>Minor Page Fault Count Delta</code>，自上次更新以来发生的次要页面错误的数量。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>显示进程信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示完整命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以批处理模式显示程序信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以累积模式显示程序信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-S</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置信息更新次数，表示更新两次后终止更新显示。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-n</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置信息更新时间，表示更新周期为<code>3</code>秒。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-d</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示指定的进程信息，<code>CPU</code>、内存占用率等。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-p</span> <span class="token number">131</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不能利用交互式指令来对进程下命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span> <span class="token parameter variable">-s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://www.computerhope.com/unix/top.htm
https://www.commandlinux.com/man-page/man1/top.1.html
https://www.geeksforgeeks.org/top-command-in-linux-with-examples/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),l=[a];function s(n,t){return o(),d("div",null,l)}const u=e(i,[["render",s],["__file","top命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/top%E5%91%BD%E4%BB%A4.html","title":"top命令","lang":"zh-CN","frontmatter":{"description":"top命令 top命令提供运行系统的动态实时视图，其可以显示系统摘要信息，以及当前由内核管理的进程或线程的列表，显示的系统摘要信息的类型以及为任务显示的信息的类型、顺序和大小都是用户可配置的。 语法 参数 -h: 输出帮助信息。 -v: 输出版本信息。 -b: 以批处理模式启动top，这对于从top向其他程序或文件发送输出很有用，在这种模式下，top将...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/top%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"top命令"}],["meta",{"property":"og:description","content":"top命令 top命令提供运行系统的动态实时视图，其可以显示系统摘要信息，以及当前由内核管理的进程或线程的列表，显示的系统摘要信息的类型以及为任务显示的信息的类型、顺序和大小都是用户可配置的。 语法 参数 -h: 输出帮助信息。 -v: 输出版本信息。 -b: 以批处理模式启动top，这对于从top向其他程序或文件发送输出很有用，在这种模式下，top将..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"top命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"相关信息","slug":"相关信息","link":"#相关信息","children":[{"level":3,"title":"概览","slug":"概览","link":"#概览","children":[]},{"level":3,"title":"CPU信息","slug":"cpu信息","link":"#cpu信息","children":[]},{"level":3,"title":"列字段","slug":"列字段","link":"#列字段","children":[]}]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":15,"words":4500},"filePathRelative":"MacOS/Terminal/top命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,m as data};
