import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as n,z as i}from"./app-lp0sOEvl.js";const s={},t=i(`<h1 id="file命令" tabindex="-1"><a class="header-anchor" href="#file命令"><span>file命令</span></a></h1><p><code>file</code>命令用来探测给定文件的类型，<code>file</code>命令对文件的检查分为文件系统、魔法文件和语言检查<code>3</code>个过程。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">file</span> <span class="token punctuation">[</span> <span class="token parameter variable">-bchikLnNprsvz</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> namefile <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-F</span> separator <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-m</span> magicfiles <span class="token punctuation">]</span> <span class="token punctuation">[</span>file or folder<span class="token punctuation">]</span> <span class="token punctuation">..</span>.
<span class="token function">file</span> <span class="token parameter variable">-C</span> <span class="token punctuation">[</span> <span class="token parameter variable">-m</span> magicfile <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-b, --brief</code>: 简洁模式，列出辨识结果时，不显示文件名称。</li><li><code>-c, --checking-printout</code>: 详细显示指令执行过程，便于排错或分析程序执行的情形。</li><li><code>-C, --compile</code>: 编译一个<code>magic.mgc</code>输出文件，其中包含文件的预解析版本。</li><li><code>-f, --files-from &lt;file&gt;</code>: 指定名称文件，其内容有一个或多个文件名称时，让<code>file</code>依序辨识这些文件，格式为每列一个文件名称。</li><li><code>-F, --separator separator</code>: 使用指定的字符串作为文件名和返回的文件结果之间的分隔符，默认为<code>:</code>。</li><li><code>-i, --mime</code>: 使文件命令输出<code>mime</code>类型。</li><li><code>-L</code>: 直接显示符号连接所指向的文件的类别。</li><li><code>-L, --dereference</code>: 跟随符号链接，如果设置了<code>POSIXLY_CORRECT</code>，则为默认值。</li><li><code>-m &lt;file&gt;</code>: 指定魔法文件，<code>magic file</code>规则就是根据文件的特殊内容去判断一个文件的类型，例如<code>tar</code>格式的标识信息，通常默认<code>magic file</code>文件存在于<code>/usr/share/file/</code>等目录下。</li><li><code>-n, --no-buffer</code>: 检查每个文件后强制刷新标准输出，仅在检查文件列表时才有用，该选项供希望从管道输出文件类型的程序使用。</li><li><code>-N, --no-pad</code>: 不要填充文件名，以使它们在输出中对齐。</li><li><code>-r, --raw</code>: 不将无法打印的字符翻译为<code>\\ooo</code>，通常文件将不可打印的字符转换为八进制表示形式。</li><li><code>-v</code>: 显示版本信息。</li><li><code>-z</code>: 尝试去解读压缩文件的内容。</li><li><code>file or folder</code>: 要确定类型的文件列表，多个文件之间使用空格分开，可以使用<code>shell</code>通配符匹配多个文件。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>显示文件类型。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">file</span> file.txt
<span class="token comment"># file.txt: ASCII text</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>显示文件<code>MIME</code>类型。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">file</span> <span class="token parameter variable">-i</span> file.txt
<span class="token comment"># file.txt: text/plain; charset=us-ascii</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>简洁模式，不显示文件名。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">file</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-i</span> file.txt
<span class="token comment"># text/plain; charset=us-ascii</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,13),l=[t];function c(o,d){return a(),n("div",null,l)}const m=e(s,[["render",c],["__file","file命令.html.vue"]]),u=JSON.parse('{"path":"/MacOS/Terminal/file%E5%91%BD%E4%BB%A4.html","title":"file命令","lang":"zh-CN","frontmatter":{"description":"file命令 file命令用来探测给定文件的类型，file命令对文件的检查分为文件系统、魔法文件和语言检查3个过程。 语法 参数 -b, --brief: 简洁模式，列出辨识结果时，不显示文件名称。 -c, --checking-printout: 详细显示指令执行过程，便于排错或分析程序执行的情形。 -C, --compile: 编译一个magic....","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/file%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"file命令"}],["meta",{"property":"og:description","content":"file命令 file命令用来探测给定文件的类型，file命令对文件的检查分为文件系统、魔法文件和语言检查3个过程。 语法 参数 -b, --brief: 简洁模式，列出辨识结果时，不显示文件名称。 -c, --checking-printout: 详细显示指令执行过程，便于排错或分析程序执行的情形。 -C, --compile: 编译一个magic...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"file命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":1.79,"words":537},"filePathRelative":"MacOS/Terminal/file命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{m as comp,u as data};
