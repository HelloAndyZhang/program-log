import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as o,z as c}from"./app-lp0sOEvl.js";const t={},s=c(`<h1 id="col命令" tabindex="-1"><a class="header-anchor" href="#col命令"><span>col命令</span></a></h1><p>在很多<code>UNIX</code>说明文件里，都有<code>RLF</code>控制字符，当我们把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，<code>col</code>命令则能有效滤除这些控制字符。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>col <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-b, --no-backspaces</code>: 过滤掉所有的控制字符，包括<code>RLF</code>和<code>HRLF</code>。</li><li><code>-f, --fine</code>: 允许前半行换行，通常在半行边界上打印的字符会在下一行上打印，滤除<code>RLF</code>字符，但允许将<code>HRLF</code>字符呈现出来。</li><li><code>-p, --pass</code>: 传递未知控制序列，通常<code>col</code>将从输入中过滤出除自身识别和解释的以外的任何控制序列。</li><li><code>-h, --tabs</code>: 将空格转换为制表符，这是默认设置。</li><li><code>-x, --spaces</code>: 将制表符转换为空格。</li><li><code>-l, --lines NUM</code>: 在内存中至少缓冲<code>num</code>行，默认情况下缓存<code>128</code>行。</li><li><code>-V, --version</code>: 输出版本信息。</li><li><code>-H, --help</code>: 输出帮助信息。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>将<code>col</code>的帮助文档过滤掉反向换行符<code>RLF</code>后保存到<code>col.txt</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>col <span class="token parameter variable">--help</span> <span class="token operator">|</span> col <span class="token operator">&gt;</span> col.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将<code>col</code>的帮助文档过滤掉控制字符后保存到<code>col.txt</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>col <span class="token parameter variable">--help</span> <span class="token operator">|</span> col <span class="token parameter variable">-b</span> <span class="token operator">&gt;</span> col.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将<code>col</code>的帮助文档的制表符转换为空格后保存到<code>col.txt</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>col <span class="token parameter variable">--help</span> <span class="token operator">|</span> col <span class="token parameter variable">-x</span> <span class="token operator">&gt;</span> col.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),l=[s];function n(d,i){return a(),o("div",null,l)}const h=e(t,[["render",n],["__file","col命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/col%E5%91%BD%E4%BB%A4.html","title":"col命令","lang":"zh-CN","frontmatter":{"description":"col命令 在很多UNIX说明文件里，都有RLF控制字符，当我们把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col命令则能有效滤除这些控制字符。 语法 参数 -b, --no-backspaces: 过滤掉所有的控制字符，包括RLF和HRLF。 -f, --fine: 允许前半行换行，通常在半行边界上打印的字符会在下一行上打印，滤除RLF字...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/col%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"col命令"}],["meta",{"property":"og:description","content":"col命令 在很多UNIX说明文件里，都有RLF控制字符，当我们把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col命令则能有效滤除这些控制字符。 语法 参数 -b, --no-backspaces: 过滤掉所有的控制字符，包括RLF和HRLF。 -f, --fine: 允许前半行换行，通常在半行边界上打印的字符会在下一行上打印，滤除RLF字..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"col命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":1.06,"words":319},"filePathRelative":"MacOS/Terminal/col命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{h as comp,m as data};
