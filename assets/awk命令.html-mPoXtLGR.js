import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as n,z as s}from"./app-lp0sOEvl.js";const t={},i=s(`<h1 id="awk命令" tabindex="-1"><a class="header-anchor" href="#awk命令"><span>awk命令</span></a></h1><p><code>Awk</code>是一种用于高级文本处理的通用脚本语言，其主要用作报告和分析工具，与大多数其他程序性编程语言不同，<code>Awk</code>是数据驱动的，也就是说需要定义一组针对输入文本要执行的操作，然后其获取输入数据，对其进行转换，然后将结果发送到标准输出。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">awk</span> <span class="token punctuation">[</span> <span class="token parameter variable">-F</span> fs <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">var</span><span class="token operator">=</span>value <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token string">&#39;prog&#39;</span> <span class="token operator">|</span> <span class="token parameter variable">-f</span> progfile <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token function">file</span> <span class="token punctuation">..</span>. <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-F fs</code>: 将输入字段分隔符设置为正则表达式<code>fs</code>。</li><li><code>-v var=value</code>: 在执行<code>awk</code>程序之前，将值赋值给变量<code>var</code>。</li><li><code>&#39;prog&#39;</code>: <code>awk</code>程序。</li><li><code>-f progfile</code>: 指定文件<code>progfile</code>，其中包含要执行的<code>awk</code>程序。</li><li><code>file ...</code>: 由指定的<code>awk</code>程序处理的文件。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>示例文件<code>example.txt</code>文件内容如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Bucks Milwaukee    60 22 0.732 
Raptors Toronto    55 24 0.707 
76ers Philadelphia 51 31 0.622
Celtics Boston     33 33 0.598
Pacers Indiana     30 34 0.585
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出<code>example.txt</code>的第<code>3</code>个字段。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">awk</span> <span class="token string">&#39;{ print $3 }&#39;</span> example.txt
<span class="token comment"># 60</span>
<span class="token comment"># 55</span>
<span class="token comment"># 51</span>
<span class="token comment"># 33</span>
<span class="token comment"># 30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用正则表达式匹配出以<code>R</code>开头的组。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">awk</span> <span class="token string">&#39;/^R/ { print $1,$2,$3,$4 }&#39;</span> example.txt
<span class="token comment"># Raptors Toronto 55 24</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>BEGIN</code>以及<code>END</code>输出在处理记录之前与之后执行的操作，处理过程为输出第二个字段包含<code>Tor</code>的组。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">awk</span> <span class="token string">&#39;BEGIN { print &quot;Start Processing&quot; }; $2 ~ /Tor/ {print $1,$2,$3,$4 }; END { print &quot;End Processing&quot; }&#39;</span> example.txt
<span class="token comment"># Start Processing</span>
<span class="token comment"># Raptors Toronto 55 24</span>
<span class="token comment"># End Processing</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[i];function c(l,d){return a(),n("div",null,o)}const m=e(t,[["render",c],["__file","awk命令.html.vue"]]),u=JSON.parse('{"path":"/MacOS/Terminal/awk%E5%91%BD%E4%BB%A4.html","title":"awk命令","lang":"zh-CN","frontmatter":{"description":"awk命令 Awk是一种用于高级文本处理的通用脚本语言，其主要用作报告和分析工具，与大多数其他程序性编程语言不同，Awk是数据驱动的，也就是说需要定义一组针对输入文本要执行的操作，然后其获取输入数据，对其进行转换，然后将结果发送到标准输出。 语法 参数 -F fs: 将输入字段分隔符设置为正则表达式fs。 -v var=value: 在执行awk程序之...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/awk%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"awk命令"}],["meta",{"property":"og:description","content":"awk命令 Awk是一种用于高级文本处理的通用脚本语言，其主要用作报告和分析工具，与大多数其他程序性编程语言不同，Awk是数据驱动的，也就是说需要定义一组针对输入文本要执行的操作，然后其获取输入数据，对其进行转换，然后将结果发送到标准输出。 语法 参数 -F fs: 将输入字段分隔符设置为正则表达式fs。 -v var=value: 在执行awk程序之..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"awk命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":1.16,"words":348},"filePathRelative":"MacOS/Terminal/awk命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{m as comp,u as data};
