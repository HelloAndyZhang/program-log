import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as c,j as o,z as d}from"./app-lp0sOEvl.js";const a={},n=d(`<h1 id="cp命令" tabindex="-1"><a class="header-anchor" href="#cp命令"><span>cp命令</span></a></h1><p><code>cp</code>命令主要用于复制文件或目录。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-T<span class="token punctuation">]</span> SOURCE DEST
<span class="token function">cp</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. SOURCE<span class="token punctuation">..</span>. DIRECTORY
<span class="token function">cp</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token parameter variable">-t</span> DIRECTORY SOURCE<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-a, --archive</code>: 与<code>-dR --preserve = ALL</code>相同，执行复制时，尝试保留尽可能多的原始文件结构，属性和关联的元数据。</li><li><code>--attributes-only</code>: 不复制文件数据，仅创建具有相同属性的文件，如果目标文件已经存在，不更改其内容，并且可以使用<code>--preserve</code>选项精确控制要复制的属性。</li><li><code>--backup[=CONTROL]</code>: 对每个现有目标文件进行备份，否则将被覆盖或删除，该控制参数<code>CONTROL</code>指定了版本控制的方法来使用：<code>none, off</code>，不进行备份；<code>numbered, t</code>，进行编号备份；<code>existing, nil</code>，简单的说明编号是否存在编号备份；<code>simple, never</code>， 始终进行简单的备份。有一种特殊情况，当<code>source</code>和<code>dest</code>是相同的常规文件时，<code>cp --force --backup</code>将对源进行备份。</li><li><code>-b </code>: 类似于<code>--backup</code>，但不接受控制参数，始终使用默认的控制方法。</li><li><code>--copy-contents</code>: 递归操作时，复制特殊文件的内容，例如<code>FIFO</code>和<code>/dev</code>中的设备，通常适用于专业用途。</li><li><code>-d</code>: 复制符号链接本身而不是它们引用的文件，并保留副本中源文件之间的硬链接，与<code>--no-dereference --preserve = links</code>相同。</li><li><code>-f, --force</code>: 如果无法打开现有的目标文件，将其删除，然后重试。如果使用<code>n / --no-clobber</code>选项，则此选项无效，但是其独立于<code>-i / --interactive</code>来应用，这两个选项都不能消除另一个的影响。</li><li><code>-i, --interactive</code>: 覆盖前提示，覆盖先前的<code>-n</code>选项。</li><li><code>-H</code>: 遵循命令行上指定的符号链接，但保留发现的链接。如果命令行上的参数之一是符号链接，请复制引用的文件，而不是链接本身。但是如果在递归遍历过程中发现了符号链接，它将被复制为符号链接，而不是常规文件。</li><li><code>-l, --link</code>: 创建指向文件的硬链接，而不是复制它们。</li><li><code>-L, --dereference</code>: 始终遵循源文件中的符号链接，如果<code>source</code>是符号链接，请复制链接到的文件，而不是符号链接本身，指定此选项后，<code>cp</code>无法在目标副本中创建符号链接。</li><li><code>-n, --no-clobber</code>: 不要覆盖现有文件。如果先前指定了<code>-i / --interactive</code>，则此选项将覆盖它，不能使用<code>-b / --backup</code>来指定此选项，因为仅在文件将被覆盖时才创建备份。</li><li><code>-P, --no-dereference</code>: 不遵循源代码中的符号链接，将符号链接复制为符号链接，但是仍然可以遵循目标中遇到的现有符号链接。</li><li><code>-p</code>: 与<code>--preserve=mode,ownership,timestamps</code>相同。</li><li><code>--preserve[=ATTR_LIST]</code>: 保留指定的属性，以逗号分隔。属性是：<code>mode</code>，保留文件模式位（由<code>chmod</code>设置）和任何<code>ACL</code>；<code>ownership</code>，保留所有者和组（按<code>chown</code>设置），保留这些属性的能力与使用<code>chown</code>相同；<code>timestamps</code>，如果可能的话，保留最后一次文件访问和修改的时间（<code>atime</code>和<code>mtime</code>，由<code>touch</code>设置）；<code>links</code>，在目标文件中保留源文件之间的所有链接，使用<code>-L</code>或<code>-H</code>时，此选项可能会将符号链接复制为硬链接；<code>context</code>，保留源文件的<code>SELinux</code>安全上下文，否则将由于详细的诊断而失败；<code>xattr</code>，保留源文件的扩展属性，否则将因详细诊断而失败；<code>all</code>，保留以上所有内容，与单独指定上述所有属性相同，不同之处在于无法复制<code>context</code>或<code>xattr</code>不会给出失败的退出状态。如果未指定，则<code>attr_list</code>的默认值为<code>mode</code>，<code>ownership</code>，<code>timestamps</code>。</li><li><code>-c</code>: 已弃用，与<code>--preserve=context</code>相同。</li><li><code>--no-preserve=ATTR_LIST</code>: 不要保留指定的属性。</li><li><code>--parents</code>: 在目录下使用完整的源文件名，即在复制到目标目录时，根据<code>source</code>中指定的路径名，在目标中创建丢失的父目录。</li><li><code>-R, -r, --recursive</code>: 递归复制目录。</li><li><code>--reflink[=WHEN]</code>: 如果目标文件系统支持，请执行优化的<code>CoW</code>（写时复制）克隆，生成的副本将在磁盘上与原始文件共享相同的字节，直到修改副本为止，请注意这意味着如果源字节已损坏，则目标将共享损坏的数据。</li><li><code>--remove-destination</code>: 尝试打开每个目标文件之前，先删除它，与<code>--force</code>选项相反，该选项仅在尝试打开失败后才删除目标文件。</li><li><code>--sparse=WHEN</code>: 控制稀疏文件的创建。稀疏文件包含空洞，其中空洞是零字节序列，不占用物理磁盘空间，读取文件时，孔将读取为零。由于许多文件包含长的零序列，因此可以节省磁盘空间，默认情况下，<code>cp</code>检测稀疏文件并创建稀疏目标文件。在当参数定义了<code>cp</code>当检测到源文件是稀疏的行为：<code>auto</code>，如果源稀疏，尝试使目标稀疏，如果目标存在并且是非常规文件，请不要尝试使其稀疏，这是默认值；<code>always</code>，对于源中每个零字节的足够长的序列，即使输入文件不是稀疏的，也要尝试在目标中打稀疏，如果源文件系统不支持稀疏文件，这将可以在目标文件系统上适当地创建一个稀疏文件；<code>never</code>，不使输出文件稀疏，某些特殊文件（例如交换文件）绝对不能稀疏。</li><li><code>--strip-trailing-slashes</code>: 删除每个源参数中的所有尾部斜杠。</li><li><code>-s, --symbolic-link</code>: 进行符号链接，而不是复制文件本身。除非目标文件位于当前目录中，否则所有源文件都必须是以斜杠开头的绝对路径名。</li><li><code>-S, --suffix=SUFFIX</code>: 覆盖通常的备份后缀。</li><li><code>-t, --target-directory=DIRECTORY</code>: 将所有源参数复制到目录中。</li><li><code>-T, --no-target-directory</code>: 将目的地视为普通文件。</li><li><code>-u, --update</code>: 仅在源文件比目标文件新或缺少目标文件时复制。</li><li><code>-v, --verbose</code>: 详细模式，解释正在做什么。</li><li><code>-x, --one-file-system</code>: 仅在执行命令的文件系统上操作，如果<code>cp</code>试图越过边界到另一个文件系统，则这些文件将被跳过。这包括网络驱动器，驻留在具有不同安装点的文件系统上的任何文件。代表安装点本身的目录将被复制，但不会被遍历。如果指定了<code>-v</code>，则将确切显示已跳过的文件。</li><li><code>-Z, --context[=CTX]</code>: 设置目标的<code>SELinux</code>安全上下文，文件为默认类型，或<code>CTX</code>（如果指定）。</li><li><code>--help</code>: 显示帮助信息。</li><li><code>--version</code>: 显示版本信息。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>将文件<code>file.txt</code>复制为<code>file2.txt</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> file.txt file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>递归复制文件夹，将<code>tmp</code>文件夹内容全部复制。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-R</span> ./tmp ./tmp2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建对<code>file.txt</code>的符号链接而不是复制文件，当然使用<code>ln</code>命令是专门为文件创建符号链接的，<code>cp</code>同样是创建符号链接的好方法，注意要在另一个目录中创建符号链接，<code>cp</code>需要在源文件名中指定完整路径名，包括完整目录名，相对路径将不起作用。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-s</span> file.txt file-link1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),t=[n];function i(s,l){return c(),o("div",null,t)}const u=e(a,[["render",i],["__file","cp命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/cp%E5%91%BD%E4%BB%A4.html","title":"cp命令","lang":"zh-CN","frontmatter":{"description":"cp命令 cp命令主要用于复制文件或目录。 语法 参数 -a, --archive: 与-dR --preserve = ALL相同，执行复制时，尝试保留尽可能多的原始文件结构，属性和关联的元数据。 --attributes-only: 不复制文件数据，仅创建具有相同属性的文件，如果目标文件已经存在，不更改其内容，并且可以使用--preserve选项精...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/cp%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"cp命令"}],["meta",{"property":"og:description","content":"cp命令 cp命令主要用于复制文件或目录。 语法 参数 -a, --archive: 与-dR --preserve = ALL相同，执行复制时，尝试保留尽可能多的原始文件结构，属性和关联的元数据。 --attributes-only: 不复制文件数据，仅创建具有相同属性的文件，如果目标文件已经存在，不更改其内容，并且可以使用--preserve选项精..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cp命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":6.18,"words":1853},"filePathRelative":"MacOS/Terminal/cp命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,m as data};
