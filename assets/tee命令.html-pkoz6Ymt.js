import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as t,j as a,z as n}from"./app-lp0sOEvl.js";const s={},i=n(`<h1 id="tee命令" tabindex="-1"><a class="header-anchor" href="#tee命令"><span>tee命令</span></a></h1><p><code>tee</code>命令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tee</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>FILE<span class="token punctuation">]</span><span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-a, --append</code>: 追加到已有文件的后面，而不是覆盖文件。</li><li><code>-i, --ignore-interrupts</code>: 忽略中断信号。</li><li><code>-p</code>: 诊断写入非管道的错误。</li><li><code>--output-error[=MODE]</code>: 设置写错误时的行为。</li><li><code>--help</code>: 显示帮助信息。</li><li><code>--version</code>: 显示版本信息</li></ul><h2 id="模式" tabindex="-1"><a class="header-anchor" href="#模式"><span>模式</span></a></h2><ul><li><code>warn</code>: 诊断写入任何输出的错误。</li><li><code>warn-nopipe</code>: 诊断写入任何输出而不是管道的错误。</li><li><code>exit</code>: 当错误写入任何输出时退出。</li><li><code>exit-nopipe</code>: 当写入任何输出（不是管道）时出错时退出。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>将用户输入的数据同时保存到文件<code>file1.txt</code>和<code>file2.txt</code>中，输入文件信息后回车即可得到输出反馈。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tee</span> file1.txt file2.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将用户输入的数据追加到<code>file1.txt</code>文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tee</span> <span class="token parameter variable">-a</span> file1.txt  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>ls</code>列出当前目录中所有文件扩展名为<code>.txt</code>的所有文件，每行一个文件名，将输出通过管道传输到<code>wc</code>，将行进行计数并输出数字，输出通过管道传输到<code>tee</code>，将输出写入终端，并将信息写入文件<code>count.txt</code>，即写入文件扩展名为<code>.txt</code>的所有文件的数量。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-1</span> *.txt <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">tee</span> count.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://www.computerhope.com/unix/utee.htm
https://www.runoob.com/linux/linux-comm-tee.html
https://www.tutorialspoint.com/unix_commands/tee.htm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),l=[i];function o(c,d){return t(),a("div",null,l)}const u=e(s,[["render",o],["__file","tee命令.html.vue"]]),h=JSON.parse('{"path":"/MacOS/Terminal/tee%E5%91%BD%E4%BB%A4.html","title":"tee命令","lang":"zh-CN","frontmatter":{"description":"tee命令 tee命令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。 语法 参数 -a, --append: 追加到已有文件的后面，而不是覆盖文件。 -i, --ignore-interrupts: 忽略中断信号。 -p: 诊断写入非管道的错误。 --output-error[=MODE]: 设置写错误时的行为。 --help:...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/tee%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"tee命令"}],["meta",{"property":"og:description","content":"tee命令 tee命令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。 语法 参数 -a, --append: 追加到已有文件的后面，而不是覆盖文件。 -i, --ignore-interrupts: 忽略中断信号。 -p: 诊断写入非管道的错误。 --output-error[=MODE]: 设置写错误时的行为。 --help:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tee命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":1.17,"words":350},"filePathRelative":"MacOS/Terminal/tee命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,h as data};
