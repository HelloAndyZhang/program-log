import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as d,j as i,z as c}from"./app-lp0sOEvl.js";const t={},o=c(`<h1 id="ps命令" tabindex="-1"><a class="header-anchor" href="#ps命令"><span>ps命令</span></a></h1><p><code>Linux</code>是一个多任务、多用户的操作系统，因此它允许多个进程同时运行而不相互干扰，进程是<code>Linux</code>操作系统的重要基本概念之一，进程是程序的执行实例，在操作系统中执行不同的任务。<code>Linux</code>为我们提供了一个名为<code>ps</code>的实用程序，用于查看与系统上的进程相关的信息，它是<code>process status</code>进程状态的缩写，<code>ps</code>命令用于列出当前正在运行的进程，它们的<code>pid</code>以及一些其他信息取决于不同的选项，它从<code>/proc</code>文件系统中的虚拟文件读取进程信息，<code>/proc</code>包含虚拟文件，这就是它被称为虚拟文件系统的原因，<code>process status</code>命令<code>ps</code>显示有关活动进程的信息，类似于<code>windows</code>的任务管理器，每个操作系统的<code>ps</code>版本都略有不同，因此若要是需要获取详细情况则需要查阅操作系统的<code>wiki</code>。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><p><code>ps</code>命令有多种类别的参数可以选择: <code>simple|list|output|threads|misc|all</code>。</p><h3 id="simple-process-selection" tabindex="-1"><a class="header-anchor" href="#simple-process-selection"><span>Simple Process Selection</span></a></h3><ul><li><code>-A, -e</code>: 选择所有进程。</li><li><code>-a</code>: 选择除会话引线和与终端无关的进程之外的所有进程。</li><li><code>a</code>: 列出带有终端<code>tty</code>的所有进程，包括其他用户进程，或者在与<code>x</code>选项一起使用时列出所有进程。</li><li><code>-d</code>: 选择除会话所属者以外的所有进程。</li><li><code>-N, --deselect</code>: 选择除满足指定条件的进程以外的所有进程。</li><li><code>r</code>: 将选择限制为仅运行进程。</li><li><code>T</code>: 选择与此终端关联的所有进程。</li><li><code>x</code>: 列出拥有的所有进程(和<code>ps</code>相同的<code>EUID</code>)，或者在和<code>a</code>选项一起使用时列出所有进程。</li></ul><h3 id="process-selection-by-list" tabindex="-1"><a class="header-anchor" href="#process-selection-by-list"><span>Process Selection By List</span></a></h3><ul><li><code>-C &lt;command&gt;</code>: 按命令名选择，这将选择其可执行名称在<code>command</code>中给定的进程。</li><li><code>-G, --Group &lt;GID&gt;</code>: 按真实组<code>ID (RGID)</code>或名称选择，这将选择其真实组名或<code>ID</code>在<code>grplist</code>列表中的进程。</li><li><code>-g, --group &lt;group&gt;</code>: 按会话或有效组名选择。</li><li><code>-p, p, --pid &lt;PID&gt;</code>: 按进程<code>ID</code>选择。</li><li><code>--ppid &lt;PID&gt;</code>: 按父进程<code>ID</code>选择，这将选择<code>pidlist</code>中具有父进程<code>ID</code>的进程，也就是说，它选择的进程是<code>pidlist</code>中列出的那些进程的子进程。</li><li><code>-q, q, --quick-pid &lt;PID&gt;</code>: 按进程<code>ID</code>选择(快速模式)。</li><li><code>-s, --sid &lt;session&gt;</code>: 按会话<code>ID</code>选择。</li><li><code>-t, t, --tty &lt;tty&gt;</code>: 通过<code>tty (terminal)</code>选择。</li><li><code>-u, U, --user &lt;UID&gt;</code>: 根据有效的用户<code>ID (EUID)</code>或名称选择。</li><li><code>-U, --User &lt;UID&gt;</code>: 按真实用户<code>ID (RUID)</code>或名称选择。</li></ul><h3 id="output-format-control" tabindex="-1"><a class="header-anchor" href="#output-format-control"><span>Output Format Control</span></a></h3><ul><li><code>-F</code>: 额外的完整格式。</li><li><code>-f</code>: 进行全格式列表，可以将此选项与其他<code>UNIX</code>样式的选项结合使用以添加其他列，它还会导致命令参数被打印，与<code>-L</code>一起使用时，将添加<code>NLWP</code>线程数和<code>LWP</code>线程<code>ID</code>列。</li><li><code>f, --forest</code>:<code> ASCII art</code>进程层次结构，如许多树，也称为林。</li><li><code>-H</code>: 显示进程层次结构(林)。</li><li><code>-j</code>: 作业格式。</li><li><code>j</code>: <code>BSD</code>作业控制格式。</li><li><code>-l</code>: 长格式，<code>-y</code>选项通常对此很有用。</li><li><code>l</code>: 显示<code>BSD</code>长格式。</li><li><code>-M, Z</code>: 对于<code>SE Linux</code>添加一列安全数据。</li><li><code>-O &lt;format&gt;</code>: 使用默认列预加载。</li><li><code>O &lt;format&gt;</code>: 与<code>-O</code>类似，具有<code>BSD</code>特性。</li><li><code>-o, o, --format &lt;format&gt;</code>: 指定用户定义的格式。</li><li><code>s</code>: 显示信号格式。</li><li><code>u</code>: 显示面向用户的格式。</li><li><code>v</code>: 显示虚拟内存格式。</li><li><code>X</code>: 寄存器格式。</li><li><code>-y</code>: 不显示标志，显示<code>rss</code>代替<code>addr</code>，此选项只能与<code>-l</code>一起使用。</li><li><code>--context</code>: 使用<code>SE Linux</code>时，显示安全上下文格式。</li><li><code>--headers</code>: 重复标题行，每页输出一行。</li><li><code>--no-headers</code>: 完全不打印标题行。</li><li><code>--cols, --columns, --width &lt;num&gt;</code>: 设置屏幕宽度。</li><li><code>--rows, --lines &lt;num&gt;</code>: 设置屏幕高度。</li></ul><h3 id="thread-display" tabindex="-1"><a class="header-anchor" href="#thread-display"><span>Thread Display</span></a></h3><ul><li><code>H</code>: 将线程显示为进程。</li><li><code>-L</code>: 显示线程，可能带有<code>LWP</code>和<code>NLWP</code>列。</li><li><code>-m, m</code>: 在进程之后显示线程。</li><li><code>-T</code>: 显示线程，可能带有<code>SPID</code>列。</li></ul><h3 id="miscellaneous-options" tabindex="-1"><a class="header-anchor" href="#miscellaneous-options"><span>Miscellaneous options</span></a></h3><ul><li><code>-c</code>: 为<code>-l</code>选项显示不同的调度程序信息。</li><li><code>c</code>: 显示真实的命令名称。</li><li><code>e</code>: 在命令后显示环境。</li><li><code>k, --sort</code>: 指定排序顺序为<code>[+|-]key[,[+|-]key[,...]]</code>。</li><li><code>L</code>: 显示格式说明符。</li><li><code>n</code>: 显示数字<code>uid</code>和<code>wchan</code>。</li><li><code>S, --cumulative</code>: 包含一些<code>dead</code>子进程数据。</li><li><code>-y</code>: 不显示标志，显示<code>rss</code>，仅与<code>-l</code>一起使用。</li><li><code>-V, V, --version</code>: 显示版本信息。</li><li><code>-w, w</code>: 无限制的输出宽度。</li><li><code>--help &lt;simple|list|output|threads|misc|all&gt;</code>: 显示帮助信息。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>显示当前<code>shell</code>的进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看所有正在运行的进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -e
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通常查看所有进程可以与管道以及<code>grep</code>命令结合用以过滤，例如我们查看与<code>nginx</code>有关的所有进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code> ps -e | grep nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看除会话引线和未与终端关联的进程之外的所有进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看<code>www</code>用户的所有进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -u www
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看<code>www</code>组的所有进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -G www
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>-f</code>查看完整格式列表。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按用户自定义格式查看进程。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -aN --format cmd,pid,user,ppid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据内存占用情况将进程排序。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示所有当前进程，为了便于查看可以结合管道和<code>less</code>命令来使用。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -ax | less
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>aux</code>参数，加入<code>CPU</code>与内存用量信息，来显示全面的信息。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -aux | less
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据<code>CPU</code>使用将进程降序排序。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -aux --sort -pcpu | less
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据内存使用将进程降序排序。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -aux --sort -pmem | less
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>合并内存与<code>CPU</code>的整体使用情况进行排序，并只显示前<code>10</code>个结果。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps -aux --sort -pcpu,+pmem | head -n 10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://www.computerhope.com/unix/ups.htm
https://www.runoob.com/linux/linux-comm-ps.html
https://www.geeksforgeeks.org/ps-command-in-linux-with-examples/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),l=[o];function s(a,n){return d(),i("div",null,l)}const u=e(t,[["render",s],["__file","ps命令.html.vue"]]),m=JSON.parse('{"path":"/MacOS/Terminal/ps%E5%91%BD%E4%BB%A4.html","title":"ps命令","lang":"zh-CN","frontmatter":{"description":"ps命令 Linux是一个多任务、多用户的操作系统，因此它允许多个进程同时运行而不相互干扰，进程是Linux操作系统的重要基本概念之一，进程是程序的执行实例，在操作系统中执行不同的任务。Linux为我们提供了一个名为ps的实用程序，用于查看与系统上的进程相关的信息，它是process status进程状态的缩写，ps命令用于列出当前正在运行的进程，它们...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/ps%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"ps命令"}],["meta",{"property":"og:description","content":"ps命令 Linux是一个多任务、多用户的操作系统，因此它允许多个进程同时运行而不相互干扰，进程是Linux操作系统的重要基本概念之一，进程是程序的执行实例，在操作系统中执行不同的任务。Linux为我们提供了一个名为ps的实用程序，用于查看与系统上的进程相关的信息，它是process status进程状态的缩写，ps命令用于列出当前正在运行的进程，它们..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ps命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[{"level":3,"title":"Simple Process Selection","slug":"simple-process-selection","link":"#simple-process-selection","children":[]},{"level":3,"title":"Process Selection By List","slug":"process-selection-by-list","link":"#process-selection-by-list","children":[]},{"level":3,"title":"Output Format Control","slug":"output-format-control","link":"#output-format-control","children":[]},{"level":3,"title":"Thread Display","slug":"thread-display","link":"#thread-display","children":[]},{"level":3,"title":"Miscellaneous options","slug":"miscellaneous-options","link":"#miscellaneous-options","children":[]}]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":4.81,"words":1444},"filePathRelative":"MacOS/Terminal/ps命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{u as comp,m as data};
