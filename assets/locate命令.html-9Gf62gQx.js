import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as a,j as t,z as c}from"./app-lp0sOEvl.js";const o={},l=c(`<h1 id="locate命令" tabindex="-1"><a class="header-anchor" href="#locate命令"><span>locate命令</span></a></h1><p><code>locate</code>命令用于查找符合条件的文件，其会去保存文件和目录名称的数据库内，查找符合指定条件的文件或目录，<code>locate</code>命令预设的数据库位于<code>/var/lib/mlocate/mlocate.db</code>，<code>locate</code>与<code>find</code>不同，<code>find</code>是去硬盘找，而<code>locate</code>只在数据库中查找，这个数据库中含有本地所有文件信息，<code>Linux</code>系统自动创建这个数据库，并且每天自动更新一次，所以使用<code>locate</code>命令查不到最新变动过的文件，可以主动执行<code>updatedb</code>命令以更新数据库。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">locate</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span> <span class="token punctuation">[</span>PATTERN<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-b, --basename</code>: 仅将基本名称与指定的模式匹配。</li><li><code>-c, --count</code>: 在标准输出上不输出文件名，而只输出匹配条目的数量。</li><li><code>-d, --database &lt;DBPATH&gt;</code>: 用指定的数据库替换默认数据库，如果指定了多个<code>--database</code>选项，则结果路径是单独路径的串联，此外空数据库文件名将替换为默认数据库。</li><li><code>-e, --existing</code>: 仅打印引用定位时存在的文件的条目。</li><li><code>-L, --follow</code>: 在检查文件是否存在时，遵循尾随的符号链接，这会使将导致断开的符号链接从输出中省略，这是默认行为。</li><li><code>-h, --help</code>: 在线帮助。</li><li><code>-i, --ignore-case</code>: 匹配模式时忽略大小写区别。</li><li><code>-l, --limit, -n &lt;LIMIT&gt;</code>: 找到<code>LIMIT</code>个条目后成功退出，如果指定了<code>--count</code>选项，则结果计数也将限制为<code>LIMIT</code>。</li><li><code>-m, --mmap</code>: 出于<code>BSD</code>和<code>GNU</code>兼容性而被忽略。</li><li><code>-P, --nofollow, -H</code>: 在检查文件是否存在时，不跟随尾随的符号链接，这会使断开的符号链接像其他文件一样被报告。</li><li><code>-0, --null</code>: 使用<code>ASCII NUL</code>字符分隔输出上的条目，而不是将每个条目写在单独的行上，此选项旨在与<code>GNU xargs</code>的 <code>--null</code>选项互操作。</li><li><code>-S, --statistics</code>: 将每个有关读取数据库的统计信息写入标准输出，而不是搜索文件并成功退出。</li><li><code>-q, --quiet</code>: 不输出任何有关读取和处理数据库时遇到的错误的消息。</li><li><code>-r, --regexp &lt;REGEXP&gt;</code>: 搜索基本的正则表达式，如果使用此选项，则不允许使用模式匹配，但可以多次指定此选项。</li><li><code>--regex</code>: 将所有<code>PATTERN</code>解释为扩展的正则表达式。</li><li><code>-s, --stdio</code>: 出于<code>BSD</code>和<code>GNU</code>兼容性而被忽略。</li><li><code>-V, --version</code>: 输出版本信息。</li><li><code>-w, --wholename</code>: 将整个路径名与指定的模式匹配，这是默认行为。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>查找<code>file.txt</code>文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">locate</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出匹配<code>file.txt</code>文件名的数量。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">locate</span> <span class="token parameter variable">-c</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>匹配以<code>make</code>结尾的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">locate</span> <span class="token parameter variable">-r</span> make$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://man.linuxde.net/locate_slocate
https://www.runoob.com/linux/linux-comm-locate.html
https://www.tutorialspoint.com/unix_commands/locate.htm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),d=[l];function i(n,s){return a(),t("div",null,d)}const m=e(o,[["render",i],["__file","locate命令.html.vue"]]),h=JSON.parse('{"path":"/MacOS/Terminal/locate%E5%91%BD%E4%BB%A4.html","title":"locate命令","lang":"zh-CN","frontmatter":{"description":"locate命令 locate命令用于查找符合条件的文件，其会去保存文件和目录名称的数据库内，查找符合指定条件的文件或目录，locate命令预设的数据库位于/var/lib/mlocate/mlocate.db，locate与find不同，find是去硬盘找，而locate只在数据库中查找，这个数据库中含有本地所有文件信息，Linux系统自动创建这个数...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/locate%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"locate命令"}],["meta",{"property":"og:description","content":"locate命令 locate命令用于查找符合条件的文件，其会去保存文件和目录名称的数据库内，查找符合指定条件的文件或目录，locate命令预设的数据库位于/var/lib/mlocate/mlocate.db，locate与find不同，find是去硬盘找，而locate只在数据库中查找，这个数据库中含有本地所有文件信息，Linux系统自动创建这个数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"locate命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":2.3,"words":690},"filePathRelative":"MacOS/Terminal/locate命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{m as comp,h as data};
