import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as n,j as a,z as s}from"./app-lp0sOEvl.js";const t={},l=s(`<h1 id="find命令" tabindex="-1"><a class="header-anchor" href="#find命令"><span>find命令</span></a></h1><p><code>find</code>命令用来在指定目录下查找文件，任何位于参数之前的字符串都将被视为要查找的目录名，如果使用该命令时，不设置任何参数，则<code>find</code>命令将在当前目录下查找子目录与文件，并且将查找到的子目录和文件全部进行显示。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token punctuation">[</span>-H<span class="token punctuation">]</span> <span class="token punctuation">[</span>-L<span class="token punctuation">]</span> <span class="token punctuation">[</span>-P<span class="token punctuation">]</span> <span class="token punctuation">[</span>-Olevel<span class="token punctuation">]</span> <span class="token punctuation">[</span>-D <span class="token builtin class-name">help</span><span class="token operator">|</span>tree<span class="token operator">|</span>search<span class="token operator">|</span><span class="token function">stat</span><span class="token operator">|</span>rates<span class="token operator">|</span>opt<span class="token operator">|</span><span class="token builtin class-name">exec</span><span class="token operator">|</span>time<span class="token punctuation">]</span> <span class="token punctuation">[</span>path<span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>expression<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-amin&lt;minute&gt;</code>: 查找在指定时间曾被存取过的文件或目录，单位以分钟计算。</li><li><code>-anewer&lt;file or folder&gt;</code>: 查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录。</li><li><code>-atime&lt;day&gt;</code>: 查找在指定时间曾被存取过的文件或目录，单位以天计算。</li><li><code>-cmin&lt;minute&gt;</code>: 查找在指定时间之时被更改过的文件或目录。</li><li><code>-cnewer&lt;file or folder&gt;</code>查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录。</li><li><code>-ctime&lt;day&gt;</code>: 查找在指定时间之时被更改的文件或目录，单位以天计算。</li><li><code>-daystart</code>: 从本日开始计算时间。</li><li><code>-depth</code>: 从指定目录下最深层的子目录开始查找。</li><li><code>-empty</code>: 寻找文件大小为<code>0 Byte</code>的文件，或目录下没有任何子目录或文件的空目录。</li><li><code>-exec&lt;command&gt;</code>: 假设<code>find</code>指令的回传值为<code>True</code>，就执行该指令。</li><li><code>-false</code>: 将<code>find</code>指令的回传值皆设为<code>False</code>。</li><li><code>-fls&lt;file list&gt;</code>: 此参数的效果和指定<code>-ls</code>参数类似，但会把结果保存为指定的列表文件。</li><li><code>-follow</code>: 排除符号连接。</li><li><code>-fprint&lt;file list&gt;</code>: 此参数的效果和指定<code>-print</code>参数类似，但会把结果保存成指定的列表文件。</li><li><code>-fprint0&lt;file list&gt;</code>: 此参数的效果和指定<code>-print0</code>参数类似，但会把结果保存成指定的列表文件。</li><li><code>-fprintf&lt;file list&gt;&lt;output format&gt;</code>: 此参数的效果和指定<code>-printf</code>参数类似，但会把结果保存成指定的列表文件。</li><li><code>-fstype&lt;file system type&gt;</code>: 只寻找该文件系统类型下的文件或目录。</li><li><code>-gid&lt;group id&gt;</code>: 查找符合指定之群组识别码的文件或目录。</li><li><code>-group&lt;group name&gt;</code>: 查找符合指定之群组名称的文件或目录。</li><li><code>-help, --help</code>: 在线帮助。</li><li><code>-ilname&lt;template style&gt;</code>: 此参数的效果和指定<code>-lname</code>参数类似，但忽略字符大小写的差别。</li><li><code>-iname&lt;template style&gt;</code>: 此参数的效果和指定<code>-name</code>参数类似，但忽略字符大小写的差别。</li><li><code>-inum&lt;inode num&gt;</code>: 查找符合指定的inode编号的文件或目录。</li><li><code>-ipath&lt;template style&gt;</code>: 此参数的效果和指定<code>-path</code>参数类似，但忽略字符大小写的差别。</li><li><code>-iregex&lt;template style&gt;</code>: 此参数的效果和指定<code>-regexe</code>参数类似，但忽略字符大小写的差别。</li><li><code>-links&lt;number of connections&gt;</code>: 查找符合指定的硬连接数目的文件或目录。</li><li><code>-iname&lt;template style&gt;</code>: 指定字符串作为寻找符号连接的范本样式。</li><li><code>-ls</code>: 假设<code>find</code>指令的回传值为<code>Ture</code>，就将文件或目录名称列出到标准输出。</li><li><code>-maxdepth&lt;directory level&gt;</code>: 设置最大目录层级。</li><li><code>-mindepth&lt;directory level&gt;</code>: 设置最小目录层级。</li><li><code>-mmin&lt;minute&gt;</code>: 查找在指定时间曾被更改过的文件或目录，单位以分钟计算。</li><li><code>-mount</code>: 此参数的效果和指定<code>-xdev</code>相同。</li><li><code>-mtime&lt;24 hour&gt;</code>: 查找在指定时间曾被更改过的文件或目录，单位以<code>24</code>小时计算。</li><li><code>-name&lt;template style&gt;</code>: 指定字符串作为寻找文件或目录的范本样式。</li><li><code>-newer&lt;file or folder&gt;</code>: 查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录。</li><li><code>-nogroup</code>: 找出不属于本地主机群组识别码的文件或目录。</li><li><code>-noleaf</code>: 不去考虑目录至少需拥有两个硬连接存在。</li><li><code>-nouser</code>: 找出不属于本地主机用户识别码的文件或目录。</li><li><code>-ok&lt;command&gt;</code>: 此参数的效果和指定<code>-exec</code>类似，但在执行指令之前会先询问用户，若回答<code>y</code>或<code>Y</code>，则放弃执行命令。</li><li><code>-path&lt;template style&gt;</code>: 指定字符串作为寻找目录的范本样式。</li><li><code>-perm&lt;permission value&gt;</code>: 查找符合指定的权限数值的文件或目录。</li><li><code>-print</code>: 假设<code>find</code>指令的回传值为<code>Ture</code>，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有<code>./</code>字符串。</li><li><code>-print0</code>: 假设<code>find</code>指令的回传值为<code>Ture</code>，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行。</li><li><code>-printf&lt;output format&gt;</code>: 假设<code>find</code>指令的回传值为<code>Ture</code>，就将文件或目录名称列出到标准输出。格式可以自行指定。</li><li><code>-prune</code>: 不寻找字符串作为寻找文件或目录的范本样式;</li><li><code>-regex&lt;template style&gt;</code>: 指定字符串作为寻找文件或目录的范本样式。</li><li><code>-size&lt;file size&gt;</code>: 查找符合指定的文件大小的文件。</li><li><code>-true</code>: 将find指令的回传值皆设为<code>True</code>。</li><li><code>-type&lt;file type&gt;</code>: 只寻找符合指定的文件类型的文件。</li><li><code>-uid&lt;user id&gt;</code>: 查找符合指定的用户识别码的文件或目录。</li><li><code>-used&lt;day&gt;</code>: 查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算。</li><li><code>-user&lt;owner name&gt;</code>: 查找符和指定的拥有者名称的文件或目录。</li><li><code>-version, --version</code>: 显示版本信息。</li><li><code>-xdev</code>: 将范围局限在先行的文件系统中。</li><li><code>-xtype&lt;file type&gt;</code>: 此参数的效果和指定<code>-type</code>参数类似，差别在于它针对符号连接检查。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>查找<code>/tmp/</code>目录及其子目录下所有拓展名为<code>py</code>的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/ <span class="token parameter variable">-name</span> *.py
<span class="token comment"># /tmp/file.py</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查找<code>/tmp/</code>目录及其子目录下所有一般文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/ <span class="token parameter variable">-type</span> f
<span class="token comment"># /tmp/file.c</span>
<span class="token comment"># /tmp/file.txt</span>
<span class="token comment"># /tmp/a.out</span>
<span class="token comment"># /tmp/www/1.txt</span>
<span class="token comment"># /tmp/file.py</span>
<span class="token comment"># /tmp/file</span>
<span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找<code>/tmp/</code>目录及其子目录下所有最近<code>1</code>天内更改过的文件，<code>+1</code>则表示<code>1</code>天前更改过文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/ <span class="token parameter variable">-ctime</span> <span class="token parameter variable">-1</span>
<span class="token comment"># /tmp/</span>
<span class="token comment"># /tmp/1</span>
<span class="token comment"># /tmp/file.txt</span>
<span class="token comment"># /tmp/file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找<code>/tmp/</code>目录及其子目录下所有更改时间在<code>7</code>日以前的普通文件，并在删除之前询问是否删除。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/ <span class="token parameter variable">-type</span> f <span class="token parameter variable">-mtime</span> +7 <span class="token parameter variable">-ok</span> <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token comment"># &lt; rm ... /tmp/file.py &gt; ? n</span>
<span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找<code>/tmp/</code>目录及其子目录下所有文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/  <span class="token parameter variable">-type</span> f <span class="token parameter variable">-perm</span> <span class="token number">644</span> <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token comment"># -rw-r--r-- 1 root root 60 Jul 22 19:55 /tmp/file.c</span>
<span class="token comment"># -rw-r--r-- 1 www www 73 Jul 23 20:54 /tmp/file.txt</span>
<span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找<code>/tmp/</code>目录及其子目录下所有文件长度为<code>0</code>的普通文件，并列出它们的完整路径。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /tmp/ <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> <span class="token number">0</span> <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token comment"># -rwx------ 1 root root 0 Jul 11 17:25 /tmp/file.py</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[l];function i(c,d){return n(),a("div",null,o)}const m=e(t,[["render",i],["__file","find命令.html.vue"]]),u=JSON.parse('{"path":"/MacOS/Terminal/find%E5%91%BD%E4%BB%A4.html","title":"find命令","lang":"zh-CN","frontmatter":{"description":"find命令 find命令用来在指定目录下查找文件，任何位于参数之前的字符串都将被视为要查找的目录名，如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件，并且将查找到的子目录和文件全部进行显示。 语法 参数 -amin<minute>: 查找在指定时间曾被存取过的文件或目录，单位以分钟计算。 -anewer<file or ...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/find%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"find命令"}],["meta",{"property":"og:description","content":"find命令 find命令用来在指定目录下查找文件，任何位于参数之前的字符串都将被视为要查找的目录名，如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件，并且将查找到的子目录和文件全部进行显示。 语法 参数 -amin<minute>: 查找在指定时间曾被存取过的文件或目录，单位以分钟计算。 -anewer<file or ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"find命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":5.71,"words":1713},"filePathRelative":"MacOS/Terminal/find命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{m as comp,u as data};
