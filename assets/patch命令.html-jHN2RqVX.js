import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{i as t,j as c,z as i}from"./app-lp0sOEvl.js";const l={},a=i(`<h1 id="patch命令" tabindex="-1"><a class="header-anchor" href="#patch命令"><span>patch命令</span></a></h1><p><code>patch</code>指令让用户利用设置修补文件的方式、修改、更新原始文件，倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行，如果配合修补文件的方式则能一次修补大批文件，这也是<code>Linux</code>系统核心的升级方法之一。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>patch <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>ORIGFILE <span class="token punctuation">[</span>PATCHFILE<span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><ul><li><code>-b, --backup</code>: 备份每一个原始文件。</li><li><code>-B&lt;pref&gt;, --prefix=&lt;pref&gt;</code>: 设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称。</li><li><code>-c, --context</code>: 把修补数据解译成关联性的差异。</li><li><code>-d&lt;dir&gt;, --directory=&lt;dir&gt;</code>: 设置工作目录。</li><li><code>-D&lt;define&gt;, --ifdef=&lt;define&gt;</code>: 用指定的符号把改变的地方标示出来。</li><li><code>-e, --ed</code>: 把修补数据解译成ed指令可用的叙述文件。</li><li><code>-E, --remove-empty-files</code>: 若修补过后输出的文件其内容是一片空白，则移除该文件。</li><li><code>-f, --force</code>: 此参数的效果和指定<code>-t</code>参数类似，但会假设修补数据的版本为新版本。</li><li><code>-F&lt;num &gt;, --fuzz&lt;num &gt;</code>: 设置监别列数的最大值。</li><li><code>-g&lt;num&gt;, --get=&lt;num&gt;</code>: 设置以<code>RSC</code>或<code>SCCS</code>控制修补作业。</li><li><code>-i&lt;patchfile&gt;, --input=&lt;patchfile&gt;</code>: 读取指定的修补文件。</li><li><code>-l, --ignore-whitespace</code>: 忽略修补数据与输入数据的跳格，空格字符。</li><li><code>-n, --normal</code>: 把修补数据解译成一般性的差异。</li><li><code>-N, --forward</code>: 忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使　用过。</li><li><code>-o&lt;outfile&gt;, --output=&lt;outfile&gt;</code>: 设置输出文件的名称，修补过的文件会以该名称存放。</li><li><code>-p&lt;num&gt;, --strip=&lt;num&gt;</code>: 设置欲剥离几层路径名称。</li><li><code>-f&lt;rejectfile&gt;, --reject-file=&lt;rejectfile&gt;</code>: 设置保存拒绝修补相关信息的文件名称，预设的文件名称为<code>.rej</code>。</li><li><code>-R, --reverse</code>: 假设修补数据是由新旧文件交换位置而产生。</li><li><code>-s, --quiet或--silent</code>: 不显示指令执行过程，除非发生错误。</li><li><code>-t, --batch</code>: 自动略过错误，不询问任何问题。</li><li><code>-T, --set-time</code>: 此参数的效果和指定<code>-Z</code>参数类似，但以本地时间为主。</li><li><code>-u, --unified</code>: 把修补数据解译成一致化的差异。</li><li><code>-v, --version</code>: 显示版本信息。</li><li><code>-V&lt;method&gt;, --version-control=&lt;method&gt;</code>: 用<code>-b</code>参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用<code>-z</code>参数变更，当使用<code>-V</code>参数指定不同备份方式时，也会产生不同字尾的备份字符串。</li><li><code>-Y&lt;pref&gt;, --basename-prefix=--&lt;pref&gt;</code>: 设置文件备份时，附加在文件基本名称开头的字首字符串。</li><li><code>-z&lt;suffix&gt;, --suffix=&lt;suffix&gt;</code>: 此参数的效果和指定<code>-B</code>参数类似，差别在于修补作业使用的路径与文件名若为<code>src/linux/fs/super.c</code>，加上<code>backup/</code>字符串后，文件<code>super.c</code>会备份于<code>/src/linux/fs/backup</code>目录里。</li><li><code>-Z, --set-utc</code>: 把修补过的文件更改，存取时间设为<code>UTC</code>。</li><li><code>--backup-if-mismatch</code>: 在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件。</li><li><code>--binary</code>: 以二进制模式读写数据，而不通过标准输出设备。</li><li><code>--help</code>: 在线帮助。</li><li><code>--nobackup-if-mismatch</code>: 在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件。</li><li><code>--verbose</code>: 详细显示指令的执行过程。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>使用补丁包<code>/tmp/file.patch</code>为文件<code>/tmp/file2.txt</code>升级。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># diff /tmp/file2.txt /tmp/file3.txt &gt; /tmp/file.patch # 生成补丁文件</span>
patch /tmp/file2.txt /tmp/file.patch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://man.linuxde.net/patch
https://www.runoob.com/linux/linux-comm-patch.html
https://www.tutorialspoint.com/unix_commands/patch.htm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[a];function d(n,s){return t(),c("div",null,o)}const h=e(l,[["render",d],["__file","patch命令.html.vue"]]),u=JSON.parse('{"path":"/MacOS/Terminal/patch%E5%91%BD%E4%BB%A4.html","title":"patch命令","lang":"zh-CN","frontmatter":{"description":"patch命令 patch指令让用户利用设置修补文件的方式、修改、更新原始文件，倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行，如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。 语法 参数 -b, --backup: 备份每一个原始文件。 -B<pref>, --prefix=<pref>: 设置文件备份时...","head":[["meta",{"property":"og:url","content":"https://tgy.ink/MacOS/Terminal/patch%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"阑风伏雨"}],["meta",{"property":"og:title","content":"patch命令"}],["meta",{"property":"og:description","content":"patch命令 patch指令让用户利用设置修补文件的方式、修改、更新原始文件，倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行，如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。 语法 参数 -b, --backup: 备份每一个原始文件。 -B<pref>, --prefix=<pref>: 设置文件备份时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-03T03:23:04.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-03T03:23:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"patch命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-11-03T03:23:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1667445784000,"updatedTime":1667445784000,"contributors":[{"name":"helloandyzhang","email":"972997077@qq.com","commits":1}]},"readingTime":{"minutes":2.94,"words":882},"filePathRelative":"MacOS/Terminal/patch命令.md","localizedDate":"2022年11月3日","autoDesc":true}');export{h as comp,u as data};
